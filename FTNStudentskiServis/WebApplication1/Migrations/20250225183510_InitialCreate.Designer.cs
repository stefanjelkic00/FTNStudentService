// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250225183510_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KatedraSmer", b =>
                {
                    b.Property<int>("KatedreId")
                        .HasColumnType("int");

                    b.Property<int>("SmeroviId")
                        .HasColumnType("int");

                    b.HasKey("KatedreId", "SmeroviId");

                    b.HasIndex("SmeroviId");

                    b.ToTable("SmerKatedra", (string)null);
                });

            modelBuilder.Entity("PredmetProfesor", b =>
                {
                    b.Property<int>("PredmetiId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesoriId")
                        .HasColumnType("int");

                    b.HasKey("PredmetiId", "ProfesoriId");

                    b.HasIndex("ProfesoriId");

                    b.ToTable("PredmetProfesor", (string)null);
                });

            modelBuilder.Entity("PredmetSmer", b =>
                {
                    b.Property<int>("PredmetiId")
                        .HasColumnType("int");

                    b.Property<int>("SmeroviId")
                        .HasColumnType("int");

                    b.HasKey("PredmetiId", "SmeroviId");

                    b.HasIndex("SmeroviId");

                    b.ToTable("PredmetSmer", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Katedra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Katedre", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojEspb")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Predmeti", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.PrijavaStudenta", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("StatusIspita")
                        .HasColumnType("bit");

                    b.HasKey("StudentId", "PredmetId");

                    b.HasIndex("PredmetId");

                    b.ToTable("PrijaveStudenta", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("KatedraId")
                        .HasColumnType("int");

                    b.Property<string>("Zvanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KatedraId");

                    b.ToTable("Profesori", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Smer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Smerovi", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GodinaUpisa")
                        .HasColumnType("int");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SmerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SmerId");

                    b.ToTable("Studenti", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.StudentiPredmeti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ocena")
                        .HasColumnType("int");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentiPredmeti");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ZahtevZaPredmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Odobren")
                        .HasColumnType("bit");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("ZahteviZaPredmete", (string)null);
                });

            modelBuilder.Entity("KatedraSmer", b =>
                {
                    b.HasOne("WebApplication1.Models.Katedra", null)
                        .WithMany()
                        .HasForeignKey("KatedreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Smer", null)
                        .WithMany()
                        .HasForeignKey("SmeroviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PredmetProfesor", b =>
                {
                    b.HasOne("WebApplication1.Models.Predmet", null)
                        .WithMany()
                        .HasForeignKey("PredmetiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Profesor", null)
                        .WithMany()
                        .HasForeignKey("ProfesoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PredmetSmer", b =>
                {
                    b.HasOne("WebApplication1.Models.Predmet", null)
                        .WithMany()
                        .HasForeignKey("PredmetiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Smer", null)
                        .WithMany()
                        .HasForeignKey("SmeroviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.PrijavaStudenta", b =>
                {
                    b.HasOne("WebApplication1.Models.Predmet", "Predmet")
                        .WithMany("PrijaveStudenta")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Student", "Student")
                        .WithMany("PrijavaStudenta")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.Profesor", b =>
                {
                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithOne("Profesor")
                        .HasForeignKey("WebApplication1.Models.Profesor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Katedra", "Katedra")
                        .WithMany("Profesori")
                        .HasForeignKey("KatedraId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Katedra");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.Student", b =>
                {
                    b.HasOne("WebApplication1.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("WebApplication1.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Smer", "Smer")
                        .WithMany()
                        .HasForeignKey("SmerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Smer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Models.StudentiPredmeti", b =>
                {
                    b.HasOne("WebApplication1.Models.Predmet", "Predmet")
                        .WithMany("StudentiPredmeti")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Student", "Student")
                        .WithMany("StudentiPredmeti")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.ZahtevZaPredmet", b =>
                {
                    b.HasOne("WebApplication1.Models.Predmet", "Predmet")
                        .WithMany("ZahteviZaPredmete")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Profesor", "Profesor")
                        .WithMany("ZahteviZaPredmete")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("WebApplication1.Models.Katedra", b =>
                {
                    b.Navigation("Profesori");
                });

            modelBuilder.Entity("WebApplication1.Models.Predmet", b =>
                {
                    b.Navigation("PrijaveStudenta");

                    b.Navigation("StudentiPredmeti");

                    b.Navigation("ZahteviZaPredmete");
                });

            modelBuilder.Entity("WebApplication1.Models.Profesor", b =>
                {
                    b.Navigation("ZahteviZaPredmete");
                });

            modelBuilder.Entity("WebApplication1.Models.Student", b =>
                {
                    b.Navigation("PrijavaStudenta");

                    b.Navigation("StudentiPredmeti");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Navigation("Profesor")
                        .IsRequired();

                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
